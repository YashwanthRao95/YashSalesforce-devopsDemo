# This is a basic workflow to help you get started with Actions

name: PushToFeature
# Controsl when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the main branch
    push:
        branches: devopsDemo
    # Jobs to be executed
jobs:
    pmd-run:
        name: Run APEX PMD
        runs-on: ubuntu-latest
        steps:
            # Checkout the source code
            -   name: 'Checkout Source Code'
                uses: actions/checkout@v3
            
            # Set up Java (PMD requires Java)
            -   name: Set up Java
                uses: actions/setup-java@v3
                with:
                    java-version: '11'  # PMD supports Java 8, 11, or 17
                    distribution: 'adopt'
            
            # Read PMD Version from pmd-version.txt
            -   name: Read PMD Version
                id: read-version
                run: |
                    export PMD_VERSION=$(cat pmd/pmd-version.txt)
                    echo "PMD_VERSION=${PMD_VERSION}" >> $GITHUB_ENV

            # Download and Install PMD
            -   name: Install PMD
                run: |
                    wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F7.9.0/pmd-dist-7.9.0-bin.zip
                    unzip pmd-dist-7.9.0-bin.zip
                    mv pmd-bin-7.9.0 $HOME/pmd
                    echo "$HOME/pmd/bin" >> $GITHUB_PATH

            # Step 2: Debug - List all files
            -   name: List All Files
                run: |
                    echo "Listing all files in the repository:"
                    ls -R

            # Verify PMD Ruleset and Directory
            -   name: Verify Ruleset and Classes Directory
                run: |
                    if [ ! -f "pmd/ruleset.xml" ]; then
                    echo "Error: PMD ruleset file not found!"
                    exit 1
                    fi
                    if [ ! -d "force-app" ]; then
                    echo "Error: Directory force-app not found!"
                    exit 1
                    fi

            # Run PMD with ruleset
            -   name: Run PMD with custom ruleset
                run: |
                    pmd check -d force-app -R pmd/ruleset.xml -f text
    
    create-pr:
        name: Create Pull Request to main branch
        needs: pmd-run
        if: success()
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout Code
                uses: actions/checkout@v3
            
            # Set Git user to the actor (the user who pushed the code)
            -   name: Set Git User to GITHUB_ACTOR
                run: |
                    git config --global user.name "${{ github.actor }}"
                    git config --global user.email "${{ github.actor }}@users.noreply.github.com"

            # Fetch All Remote Branches
            -   name: Fetch All Remote Branches
                run: git fetch --all

            # Verify Remote Branches
            -   name: List Remote Branches
                run: git branch -r

            # Verify Branch State
            -   name: Verify Branch State
                run: |
                    echo "Checking current branch state..."
                    git fetch origin devopsDemo
                    git checkout devopsDemo
                    git log --oneline
                    git diff origin/main

            # Ensure devopsDemo branch is preserved
            -   name: Preserve devopsDemo Branch
                run: |
                    git fetch origin devopsDemo
                    git checkout devopsDemo
                    if ! git diff --quiet origin/main; then
                        git push origin devopsDemo
                    else
                        echo "No changes to push to devopsDemo."
                    fi
            
            # Create a new Pull request
            -   name: Create Pull Request
                uses: peter-evans/create-pull-request@v4
                with:
                    token: ${{ secrets.GITHUB_TOKEN }}
                    branch: devopsDemo
                    base: main
                    title: "Pull Request from ${{ github.actor }}"
                    body: |
                        This pull request was automatically created after successful PMD validation.
                    commit-message: "Auto-generated PR by ${{ github.actor }}"
